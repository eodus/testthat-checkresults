* using log directory '/mnt/tmp/Rtmptg0ntB/check_cran118c1025db09/transmission.Rcheck'
* using R version 3.0.0 beta (2013-03-24 r62396)
* using platform: x86_64-unknown-linux-gnu (64-bit)
* using session charset: ASCII
* using option '--no-codoc'
* checking for file 'transmission/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'transmission' version '0.1'
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package 'transmission' can be installed ... [34s/34s] OK
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking for unstated dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
Found the following calls to attach():
File 'transmission/R/ml.R':
  attach(rtdata)
See section 'Good practice' in '?attach'.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... WARNING
Error in find.package(package, lib.loc) : 
  there is no package called 'nlme'
Calls: <Anonymous> -> lapply -> FUN -> find.package
Execution halted
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... SKIPPED
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking for portable compilation flags in Makevars ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking compiled code ... OK
* checking examples ... OK
* checking for unstated dependencies in tests ... OK
* checking tests ... [15s/15s] OK
  Running 'testthat-package.R' [15s/15s]
WARNING: There was 1 warning.
NOTE: There was 1 note.
See
  '/mnt/tmp/Rtmptg0ntB/check_cran118c1025db09/transmission.Rcheck/00check.log'
for details.
